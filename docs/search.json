[
  {
    "objectID": "documentation/index.html",
    "href": "documentation/index.html",
    "title": "",
    "section": "",
    "text": "TileDB vector similarity search"
  },
  {
    "objectID": "documentation/reference/index.FlatIndex.html",
    "href": "documentation/reference/index.FlatIndex.html",
    "title": "index.FlatIndex",
    "section": "",
    "text": "vector_search.index.FlatIndex(self, uri, dtype, parts_name='parts.tdb')\nOpen a flat index\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nuri\nstr\nURI of datataset\nrequired\n\n\ndtype\nnumpy.dtype\ndatatype float32 or uint8\nrequired\n\n\nparts_name\nstr\nOptional name of partitions\n'parts.tdb'\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nquery\nOpen a flat index\n\n\n\n\n\nvector_search.index.FlatIndex.query(self, targets, k=10, nqueries=10, nthreads=8, nprobe=1)\nOpen a flat index\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ntargets\nnumpy.ndarray\nND Array of query targets\nrequired\n\n\nk\nint\nNumber of top results to return per target\n10\n\n\nnqueries\nint\nNumber of queries\n10\n\n\nnthreads\nint\nNumber of threads to use for queyr\n8\n\n\nnprobe\nint\nnumber of probes\n1"
  },
  {
    "objectID": "documentation/reference/index.FlatIndex.html#parameters",
    "href": "documentation/reference/index.FlatIndex.html#parameters",
    "title": "index.FlatIndex",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nuri\nstr\nURI of datataset\nrequired\n\n\ndtype\nnumpy.dtype\ndatatype float32 or uint8\nrequired\n\n\nparts_name\nstr\nOptional name of partitions\n'parts.tdb'"
  },
  {
    "objectID": "documentation/reference/index.FlatIndex.html#methods",
    "href": "documentation/reference/index.FlatIndex.html#methods",
    "title": "index.FlatIndex",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nquery\nOpen a flat index\n\n\n\n\n\nvector_search.index.FlatIndex.query(self, targets, k=10, nqueries=10, nthreads=8, nprobe=1)\nOpen a flat index\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ntargets\nnumpy.ndarray\nND Array of query targets\nrequired\n\n\nk\nint\nNumber of top results to return per target\n10\n\n\nnqueries\nint\nNumber of queries\n10\n\n\nnthreads\nint\nNumber of threads to use for queyr\n8\n\n\nnprobe\nint\nnumber of probes\n1"
  },
  {
    "objectID": "documentation/reference/module.html",
    "href": "documentation/reference/module.html",
    "title": "module",
    "section": "",
    "text": "vector_search.module\n\n\n\n\n\nName\nDescription\n\n\n\n\nload_as_array\nLoad array as array class\n\n\nload_as_matrix\nLoad array as Matrix class\n\n\nquery_kmeans\nRun kmeans vector query\n\n\nquery_vq\nRun vector query\n\n\n\n\n\nvector_search.module.load_as_array(path, return_matrix=False, config={})\nLoad array as array class\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npath\n\nArray path\nrequired\n\n\nreturn_matrix\nbool\nReturn matrix\nFalse\n\n\nconfig\nDict\nTileDB configuration parameters\n{}\n\n\n\n\n\n\n\nvector_search.module.load_as_matrix(path, nqueries=0, config={})\nLoad array as Matrix class\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npath\nstr\nArray path\nrequired\n\n\nnqueries\nint\nNumber of queries\n0\n\n\nconfig\nDict\nTileDB configuration parameters\n{}\n\n\n\n\n\n\n\nvector_search.module.query_kmeans(dtype, parts_uri, centroids_db, query_vectors, index_db, ids_uri, nprobe, k_nn, nth, nthreads, ctx=None)\nRun kmeans vector query\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ndtype\nnumpy.dtype\nType of vectpr, flaot32 or uint8\nrequired\n\n\nparts_uri\nstr\nPartition URI\nrequired\n\n\ncentroids_db\ncolMajorMatrix\nOpen Matrix class from load_as_matrix for centroids\nrequired\n\n\nquery_vectors\ncolMajorMatrix\nOpen Matrix class from load_as_matrix for queries\nrequired\n\n\nindex_db\nVector\nVectors\nrequired\n\n\nids_uri\nstr\nURI for id mappings\nrequired\n\n\nnprobe\nint\nNumber of probs\nrequired\n\n\nk_nn\nint\nNumber of nn\nrequired\n\n\nnth\nbool\nReturn nth records\nrequired\n\n\nnthreads\nint\nNumber of theads\nrequired\n\n\nctx\nCtx\nTiledb Context\nNone\n\n\n\n\n\n\n\nvector_search.module.query_vq(db, *args)\nRun vector query\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ndb\ncolMajorMatrix\nOpen Matrix class from load_as_matrix\nrequired\n\n\nargs\n\nArgs for query\n()"
  },
  {
    "objectID": "documentation/reference/module.html#functions",
    "href": "documentation/reference/module.html#functions",
    "title": "module",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nload_as_array\nLoad array as array class\n\n\nload_as_matrix\nLoad array as Matrix class\n\n\nquery_kmeans\nRun kmeans vector query\n\n\nquery_vq\nRun vector query\n\n\n\n\n\nvector_search.module.load_as_array(path, return_matrix=False, config={})\nLoad array as array class\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npath\n\nArray path\nrequired\n\n\nreturn_matrix\nbool\nReturn matrix\nFalse\n\n\nconfig\nDict\nTileDB configuration parameters\n{}\n\n\n\n\n\n\n\nvector_search.module.load_as_matrix(path, nqueries=0, config={})\nLoad array as Matrix class\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npath\nstr\nArray path\nrequired\n\n\nnqueries\nint\nNumber of queries\n0\n\n\nconfig\nDict\nTileDB configuration parameters\n{}\n\n\n\n\n\n\n\nvector_search.module.query_kmeans(dtype, parts_uri, centroids_db, query_vectors, index_db, ids_uri, nprobe, k_nn, nth, nthreads, ctx=None)\nRun kmeans vector query\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ndtype\nnumpy.dtype\nType of vectpr, flaot32 or uint8\nrequired\n\n\nparts_uri\nstr\nPartition URI\nrequired\n\n\ncentroids_db\ncolMajorMatrix\nOpen Matrix class from load_as_matrix for centroids\nrequired\n\n\nquery_vectors\ncolMajorMatrix\nOpen Matrix class from load_as_matrix for queries\nrequired\n\n\nindex_db\nVector\nVectors\nrequired\n\n\nids_uri\nstr\nURI for id mappings\nrequired\n\n\nnprobe\nint\nNumber of probs\nrequired\n\n\nk_nn\nint\nNumber of nn\nrequired\n\n\nnth\nbool\nReturn nth records\nrequired\n\n\nnthreads\nint\nNumber of theads\nrequired\n\n\nctx\nCtx\nTiledb Context\nNone\n\n\n\n\n\n\n\nvector_search.module.query_vq(db, *args)\nRun vector query\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ndb\ncolMajorMatrix\nOpen Matrix class from load_as_matrix\nrequired\n\n\nargs\n\nArgs for query\n()"
  },
  {
    "objectID": "documentation/reference/index.html",
    "href": "documentation/reference/index.html",
    "title": "Python",
    "section": "",
    "text": "index.Index\n\n\n\nindex.FlatIndex\nOpen a flat index\n\n\nindex.IVFFlatIndex\nOpen a IVF Flat index\n\n\ningestion\n\n\n\nmodule"
  },
  {
    "objectID": "documentation/reference/index.html#tiledb.vector_search",
    "href": "documentation/reference/index.html#tiledb.vector_search",
    "title": "Python",
    "section": "",
    "text": "index.Index\n\n\n\nindex.FlatIndex\nOpen a flat index\n\n\nindex.IVFFlatIndex\nOpen a IVF Flat index\n\n\ningestion\n\n\n\nmodule"
  },
  {
    "objectID": "documentation/reference/ingestion.html",
    "href": "documentation/reference/ingestion.html",
    "title": "ingestion",
    "section": "",
    "text": "vector_search.ingestion\n\n\n\n\n\nName\nDescription\n\n\n\n\ningest\nIngest vectors into TileDB.\n\n\n\n\n\nvector_search.ingestion.ingest(index_type, array_uri, source_uri, source_type, *, config=None, namespace=None, size=-1, partitions=-1, copy_centroids_uri=None, training_sample_size=-1, workers=-1, verbose=False, trace_id=None, mode=Mode.LOCAL)\nIngest vectors into TileDB.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nindex_type\nstr\nType of vector index (FLAT, IVF_FLAT)\nrequired\n\n\narray_uri\nstr\nVector array URI\nrequired\n\n\nsource_uri\nstr\nData source URI\nrequired\n\n\nsource_type\nstr\nType of the source data\nrequired\n\n\nconfig\n\nconfig dictionary, defaults to None\nNone\n\n\nnamespace\ntyping.Optional[str]\nTileDB-Cloud namespace, defaults to None\nNone\n\n\nsize\nint\nNumber of input vectors, if not provided use the full size of the input dataset\n-1\n\n\npartitions\nint\nNumber of partitions to load the data with, if not provided, is auto-configured based on the dataset size\n-1\n\n\ncopy_centroids_uri\nstr\nTileDB array URI to copy centroids from, if not provided, centroids are build running kmeans\nNone\n\n\ntraining_sample_size\nint\nvector sample size to train centroids with, if not provided, is auto-configured based on the dataset size\n-1\n\n\nworkers\nint\nnumber of workers for vector ingestion, if not provided, is auto-configured based on the dataset size\n-1\n\n\nverbose\nbool\nverbose logging, defaults to False\nFalse\n\n\ntrace_id\ntyping.Optional[str]\ntrace ID for logging, defaults to None\nNone\n\n\nmode\nMode\nexecution mode, defaults to LOCAL use BATCH for distributed execution\nMode.LOCAL"
  },
  {
    "objectID": "documentation/reference/ingestion.html#functions",
    "href": "documentation/reference/ingestion.html#functions",
    "title": "ingestion",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\ningest\nIngest vectors into TileDB.\n\n\n\n\n\nvector_search.ingestion.ingest(index_type, array_uri, source_uri, source_type, *, config=None, namespace=None, size=-1, partitions=-1, copy_centroids_uri=None, training_sample_size=-1, workers=-1, verbose=False, trace_id=None, mode=Mode.LOCAL)\nIngest vectors into TileDB.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nindex_type\nstr\nType of vector index (FLAT, IVF_FLAT)\nrequired\n\n\narray_uri\nstr\nVector array URI\nrequired\n\n\nsource_uri\nstr\nData source URI\nrequired\n\n\nsource_type\nstr\nType of the source data\nrequired\n\n\nconfig\n\nconfig dictionary, defaults to None\nNone\n\n\nnamespace\ntyping.Optional[str]\nTileDB-Cloud namespace, defaults to None\nNone\n\n\nsize\nint\nNumber of input vectors, if not provided use the full size of the input dataset\n-1\n\n\npartitions\nint\nNumber of partitions to load the data with, if not provided, is auto-configured based on the dataset size\n-1\n\n\ncopy_centroids_uri\nstr\nTileDB array URI to copy centroids from, if not provided, centroids are build running kmeans\nNone\n\n\ntraining_sample_size\nint\nvector sample size to train centroids with, if not provided, is auto-configured based on the dataset size\n-1\n\n\nworkers\nint\nnumber of workers for vector ingestion, if not provided, is auto-configured based on the dataset size\n-1\n\n\nverbose\nbool\nverbose logging, defaults to False\nFalse\n\n\ntrace_id\ntyping.Optional[str]\ntrace ID for logging, defaults to None\nNone\n\n\nmode\nMode\nexecution mode, defaults to LOCAL use BATCH for distributed execution\nMode.LOCAL"
  },
  {
    "objectID": "documentation/reference/index.IVFFlatIndex.html",
    "href": "documentation/reference/index.IVFFlatIndex.html",
    "title": "index.IVFFlatIndex",
    "section": "",
    "text": "vector_search.index.IVFFlatIndex(self, uri, dtype)\nOpen a IVF Flat index\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nuri\n\nURI of datataset\nrequired\n\n\ndtype\nnumpy.dtype\ndatatype float32 or uint8\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nquery\nOpen a flat index\n\n\n\n\n\nvector_search.index.IVFFlatIndex.query(self, targets, k=10, nqueries=10, nthreads=8, nprobe=1)\nOpen a flat index\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ntargets\nnumpy.ndarray\nND Array of query targets\nrequired\n\n\nk\n\nNumber of top results to return per target\n10\n\n\nnqueries\n\nNumber of queries\n10\n\n\nnthreads\n\nNumber of threads to use for queyr\n8\n\n\nnprobe\n\nnumber of probes\n1"
  },
  {
    "objectID": "documentation/reference/index.IVFFlatIndex.html#parameters",
    "href": "documentation/reference/index.IVFFlatIndex.html#parameters",
    "title": "index.IVFFlatIndex",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nuri\n\nURI of datataset\nrequired\n\n\ndtype\nnumpy.dtype\ndatatype float32 or uint8\nrequired"
  },
  {
    "objectID": "documentation/reference/index.IVFFlatIndex.html#methods",
    "href": "documentation/reference/index.IVFFlatIndex.html#methods",
    "title": "index.IVFFlatIndex",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nquery\nOpen a flat index\n\n\n\n\n\nvector_search.index.IVFFlatIndex.query(self, targets, k=10, nqueries=10, nthreads=8, nprobe=1)\nOpen a flat index\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ntargets\nnumpy.ndarray\nND Array of query targets\nrequired\n\n\nk\n\nNumber of top results to return per target\n10\n\n\nnqueries\n\nNumber of queries\n10\n\n\nnthreads\n\nNumber of threads to use for queyr\n8\n\n\nnprobe\n\nnumber of probes\n1"
  },
  {
    "objectID": "documentation/reference/index.Index.html",
    "href": "documentation/reference/index.Index.html",
    "title": "index.Index",
    "section": "",
    "text": "vector_search.index.Index()\n\n\n\n\n\nName\nDescription\n\n\n\n\nquery\n\n\n\n\n\n\nvector_search.index.Index.query(self, targets, k=10, nqueries=10, nthreads=8, nprobe=1)"
  },
  {
    "objectID": "documentation/reference/index.Index.html#methods",
    "href": "documentation/reference/index.Index.html#methods",
    "title": "index.Index",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nquery\n\n\n\n\n\n\nvector_search.index.Index.query(self, targets, k=10, nqueries=10, nthreads=8, nprobe=1)"
  }
]